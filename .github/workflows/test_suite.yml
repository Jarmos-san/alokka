name: Test Suite

on: [pull_request, push]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v3.0.2
      - name: Setup Python
        uses: actions/setup-python@v3
      - name: Load Cache
        uses: actions/cache@v3.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      - name: Install Black, Flake8 & iSort
        run: python -m pip install black flake8 isort
      - name: Run Linters
        run: |
          flake8 . --exclude=.venv --max-line-length 85
          black .
          isort .

  test:
    needs: linter
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8", "3.9"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.0.2
      - name: Set up Python v${{matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version}}
      - name: Install Poetry
        uses: snok/install-poetry@v1.2
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load Cached Virtualenv
        id: cached-pip-wheels
        uses: actions/cache@v3.0.2
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies
        run: poetry install --no-interaction --no-root -vvv
      - name: Install Alokka
        run: poetry install --no-interaction
      - name: Run Tests
        run: |
          source $VENV
          pytest -vvv --cov-report xml --cov=./
      - name: Upload Coverage
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: true
